# Generated by Django 2.1.3 on 2019-05-22 18:15

import datetime
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CreateAccountToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('uuid', models.CharField(default=uuid.uuid4, max_length=200)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('was_used', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_1_score', models.PositiveSmallIntegerField()),
                ('player_2_score', models.PositiveSmallIntegerField()),
                ('draws', models.IntegerField(default=0)),
                ('round', models.IntegerField(default=1)),
            ],
            options={
                'ordering': ('round',),
            },
        ),
        migrations.CreateModel(
            name='PasswordResetToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(default=uuid.uuid4, max_length=200)),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('was_used', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('_password', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('uuid', models.CharField(default=uuid.uuid4, max_length=200)),
                ('is_expired', models.BooleanField(default=False)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event_organizer.Player')),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='mtg event', max_length=255)),
                ('date_beginning', models.DateTimeField()),
                ('date_ending', models.DateTimeField()),
                ('rounds_number', models.IntegerField(default=1)),
            ],
            options={
                'ordering': ('date_beginning',),
            },
        ),
        migrations.CreateModel(
            name='TournamentPlayers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_dropped', models.BooleanField(default=False)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event_organizer.Player')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event_organizer.Tournament')),
            ],
        ),
        migrations.AddField(
            model_name='tournament',
            name='players',
            field=models.ManyToManyField(related_name='tournaments', through='event_organizer.TournamentPlayers', to='event_organizer.Player'),
        ),
        migrations.AddField(
            model_name='passwordresettoken',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event_organizer.Player'),
        ),
        migrations.AddField(
            model_name='match',
            name='player_1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_1', to='event_organizer.Player'),
        ),
        migrations.AddField(
            model_name='match',
            name='player_2',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='player_2', to='event_organizer.Player'),
        ),
        migrations.AddField(
            model_name='match',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='event_organizer.Tournament'),
        ),
    ]
